"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

##Version 1##
def fibonacciGenerator(max):
	first = 1
	second = 2
	fibonacci.append(first)
	fibonacci.append(second)
	while True:
		first = first + second
		if first <= max:
			fibonacci.append(first)
		else:
			break
		second = second + first
		if second <= max:
			fibonacci.append(second)
		else:
			break
	return fibonacci
	
fibonacci = []	
total = 0
max = 4000000

fibonacci = fibonacciGenerator(max)

for y in fibonacci:
	if y % 2 == 0:
		total = total + y
print total

##Version 2##
#fibonacci = fibonacciGenerator(max) # has already been run

print sum(filter(lambda x: x % 2 == 0, fibonacci))
